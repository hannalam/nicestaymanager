---
import LanguageSelector from './LanguageSelector.astro';
const { lang, t } = Astro.props;

// Helper function to get localized path
const getLocalizedPath = (path: string) => {
  if (lang === 'fr') {
    return path;
  }
  return `/${lang}${path}`;
};

const navItems = [
  { href: getLocalizedPath('/'), label: t.nav.home },
  { href: getLocalizedPath('/about'), label: t.nav.about },
  { href: getLocalizedPath('/services'), label: t.nav.services },
  { href: getLocalizedPath('/testimonials'), label: t.nav.testimonials },
  { href: getLocalizedPath('/faq'), label: t.nav.faq },
  { href: getLocalizedPath('/pricing'), label: t.nav.pricing },
  { href: getLocalizedPath('/contact'), label: t.nav.contact }
];
---

<nav class="bg-white shadow-lg fixed w-full top-0 z-50">
  <div class="max-w-7xl mx-auto px-4">
    <div class="flex justify-between h-16">
      <!-- Logo and Site Name -->
      <div class="flex-shrink-0 flex items-center">
        <a href={getLocalizedPath('/')} class="text-primary-600 font-bold flex items-center">
          <img src="/logo.svg" alt="Nice Stay Manager" class="h-12 w-auto">
          <span class="ml-2 flex flex-col sm:flex-row sm:items-center">
            <span class="text-sm sm:text-lg">Nice Stay</span>
            <span class="text-sm sm:text-lg sm:ml-1">Manager</span>
          </span>
        </a>
      </div>

      <div class="flex items-center">
        <!-- Desktop Navigation -->
        <div class="hidden lg:flex lg:space-x-8">
          {navItems.map(item => (
            <a
              href={item.href}
              class="inline-flex items-center px-1 pt-1 text-base font-medium text-gray-500 hover:text-gray-900 hover:border-b-2 hover:border-primary-500"
            >
              {item.label}
            </a>
          ))}
        </div>

        <!-- Language Selector and Mobile Menu -->
        <div class="flex items-center space-x-4 ml-6">
          <LanguageSelector currentLang={lang} />
          
          <!-- Mobile menu button -->
          <div class="lg:hidden">
            <button
              type="button"
              id="mobile-menu-button"
              class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
              aria-controls="mobile-menu"
              aria-expanded="false"
            >
              <span class="sr-only">Open main menu</span>
              <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>

            <!-- Mobile Menu -->
            <div 
              id="mobile-menu"
              class="hidden absolute right-0 mt-2 w-48 bg-white rounded-md shadow-xl transform opacity-0 transition-all duration-200"
              style="top: 100%;"
            >
              {navItems.map(item => (
                <a
                  href={item.href}
                  class="block px-4 py-2 text-base text-gray-700 hover:bg-gray-100"
                >
                  {item.label}
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<!-- Spacer to prevent content from hiding under fixed nav -->
<div class="h-16"></div>

<script>
  const button = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');
  let isOpen = false;

  button?.addEventListener('click', () => {
    isOpen = !isOpen;
    if (isOpen) {
      menu?.classList.remove('hidden', 'opacity-0');
      menu?.classList.add('opacity-100');
    } else {
      menu?.classList.add('opacity-0');
      menu?.classList.add('hidden');
    }
  });

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as Node;
    if (isOpen && !button?.contains(target) && !menu?.contains(target)) {
      isOpen = false;
      menu?.classList.add('opacity-0');
      menu?.classList.add('hidden');
    }
  });
</script>